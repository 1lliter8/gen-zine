name: "Build and deploy"
on:
  push:
    branches:
      - main
    paths-ignore:
      - .gitignore
      - README.md
      - LICENSE

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AWS_REGION: "eu-west-2"
  S3_NAME: "gen-zine.co.uk"
  CF_NAME: "E3G2UYFCTM2YIN"
  BUNDLE_GEMFILE: ${{ github.workspace }}/html/Gemfile

permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # submodules: true
          # If using the 'assets' git submodule from Chirpy Starter, uncomment above
          # (See: https://github.com/cotes2020/chirpy-starter/tree/main/assets)
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: arn:aws:iam::471112710610:role/GitHubAction-GenZineDeploy #change to reflect your IAM roleâ€™s ARN
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
      
      # Hello from AWS: WhoAmI
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0 # reads from a '.ruby-version' or '.tools-version' file if 'ruby-version' is omitted
          bundler-cache: true

      - name: Build site
        working-directory: html
        run: bundle exec rake build --trace
        env:
          JEKYLL_ENV: "production"

      - name: Test site
        working-directory: html
        run: bundle exec rake test --trace

      - name: "Deploy to AWS S3"
        working-directory: html
        run: aws s3 sync ./_site/ s3://${{ env.S3_NAME }} --delete --cache-control max-age=604800 --index-document index.html --error-document 404.html

      - name: "Create AWS Cloudfront Invalidation"
        working-directory: html
        run: aws cloudfront create-invalidation --distribution-id ${{ env.CF_NAME }} --paths "/*"
